{"version":3,"file":"static/js/185.d3d1ee01.chunk.js","mappings":"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","sources":["components/Layouts/dashboard/styles-dashboard.ts","components/Layouts/dashboard/chart/styles-chart.ts","components/Layouts/dashboard/chart/chart.tsx","assets/images/dashboard/dashboard-profile.svg","components/Layouts/dashboard/area-chart/area-chart.tsx","components/Layouts/dashboard/semicircle-progress/styles-semicircle-progress.ts","components/Layouts/dashboard/semicircle-progress/semicircle-progress.jsx","components/Layouts/dashboard/dashboard.tsx","components/Pages/dashboard-page/dashboard-page.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 100%;\r\n  height: max-content;\r\n  background: #ffffff;\r\n  border-radius: 7px;\r\n  padding: 30px;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  font-weight: 600;\r\n  font-size: 24px;\r\n  line-height: 29px;\r\n  color: #000000;\r\n`;\r\n\r\nexport const ChartsCard = styled.div`\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  column-gap: 30px;\r\n  row-gap: 30px;\r\n  @media (max-width: 1550px) {\r\n    grid-template-columns: 1fr 1fr;\r\n  }\r\n`;\r\n\r\nexport const TopCard = styled.div`\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-columns: 0.65fr 0.35fr;\r\n  column-gap: 90px;\r\n  margin-bottom: 70px;\r\n  @media (max-width: 1240px) {\r\n    grid-template-columns: 1fr 1fr;\r\n    column-gap: 50px;\r\n  }\r\n`;\r\n\r\nexport const RightCard = styled.div``;\r\n\r\nexport const LeftCard = styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\n  > div {\r\n    width: 100%;\r\n    background: #ffffff;\r\n    box-shadow: 0px 9px 20px rgba(0, 0, 0, 0.1);\r\n    border-radius: 7px;\r\n  }\r\n`;\r\n\r\nexport const ButtonGroup = styled.div`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  margin-top: 30px;\r\n`;\r\nexport const Cards = styled.div`\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  column-gap: 40px;\r\n  row-gap: 30px;\r\n  margin-top: 50px;\r\n  @media (max-width: 1260px) {\r\n    grid-template-columns: 1fr 1fr;\r\n  }\r\n`;\r\n\r\nexport const Card = styled.div`\r\n  width: 100%;\r\n  background: lightblue;\r\n  border-radius: 7px;\r\n  height: 135px;\r\n  padding: 20px 0;\r\n  div {\r\n    padding: 0 20px;\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n  }\r\n  div:nth-child(1) {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    border-bottom: 1px solid rgba(0, 0, 0, 0.1);\r\n    padding-bottom: 9px;\r\n    p {\r\n      font-weight: 500;\r\n      font-size: 20px;\r\n      line-height: 24px;\r\n      color: #364f6b;\r\n      margin-left: 7px !important;\r\n    }\r\n  }\r\n  div:nth-child(2) {\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nexport const Icon = styled.img`\r\n  margin-right: 7px !important;\r\n`;\r\n\r\nexport const AreaCard = styled.div``;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 100%;\r\n  padding: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  box-shadow: 5px 5px 10px 5px rgb(0 0 0 / 10%);\r\n`;\r\n\r\nexport const Card = styled.div`\r\n  width: 50%;\r\n  h1 {\r\n    font-weight: 600;\r\n    font-size: 20px;\r\n    line-height: 24px;\r\n    color: #000000;\r\n  }\r\n`;\r\n\r\nexport const Box = styled.div<{ background: string }>`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n  div {\r\n    width: 23px;\r\n    height: 23px;\r\n    border-radius: 3px;\r\n    background-color: ${({ background }) => background};\r\n  }\r\n  p {\r\n    font-weight: 500;\r\n    font-size: 16px;\r\n    line-height: 19px;\r\n    color: #000000;\r\n    margin-left: 8px;\r\n  }\r\n  span {\r\n    font-weight: 700;\r\n    font-size: 16px;\r\n    line-height: 19px;\r\n    color: #000000;\r\n    margin-left: 8px;\r\n  }\r\n`;","import { FC } from 'react';\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport { Box, Card, Wrapper } from './styles-chart';\r\nimport { ChartProps } from './types-chart';\r\nimport { colors } from '@src/mocks';\r\nimport { VerticalSeparator } from '@components/common/separators/sepatators';\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\nconst Chart: FC<ChartProps> = ({ value }) => {\r\n  const getColors = () => {\r\n    let temp: any[] = [];\r\n    //@ts-ignore\r\n    colors.map((item, index) => {\r\n      index < value.length && temp.push(item);\r\n    });\r\n    return temp;\r\n  };\r\n  const getData = () => {\r\n    let temp: number[] = [];\r\n    //@ts-ignore\r\n    value.map((item) => {\r\n      temp.push(item.count);\r\n    });\r\n    return temp;\r\n  };\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        label: '# of Votes',\r\n        data: [...getData()],\r\n        backgroundColor: [...getColors()],\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Card>\r\n        <h1>Maqsad</h1>\r\n        <VerticalSeparator height=\"25px\" />\r\n        {value.map((item,index) => (\r\n          <Box key={index} background={colors[index]}>\r\n            <div></div>\r\n            <p>{item.label}</p>\r\n            <span>{item.count}</span>\r\n          </Box>\r\n        ))}\r\n      </Card>\r\n      <Card>\r\n        <Doughnut data={data} />\r\n      </Card>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","var _circle, _path, _path2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgDashboardProfile(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 12,\n    cy: 12,\n    r: 11.5,\n    stroke: \"#0496FF\"\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6.93589 15.5478C7.06972 14.3274 8.17221 13.4495 9.39664 13.5393C10.1818 13.5969 11.0663 13.6441 11.8573 13.6441C12.6828 13.6441 13.5982 13.5927 14.3941 13.5317C15.5597 13.4423 16.6301 14.2273 16.8444 15.3766V15.3766C17.0987 16.7401 16.0524 17.9997 14.6653 17.9997L11.8573 17.9997H9.13359C7.81714 17.9997 6.79237 16.8564 6.93589 15.5478V15.5478Z\",\n    stroke: \"#0496FF\",\n    strokeWidth: 1.4\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.33398 8.66667C9.33398 7.19391 10.5279 6 12.0007 6V6C13.4734 6 14.6673 7.19391 14.6673 8.66667V9.04762C14.6673 10.31 13.644 11.3333 12.3816 11.3333V11.3333H11.6197V11.3333C10.3573 11.3333 9.33398 10.31 9.33398 9.04762V8.66667Z\",\n    stroke: \"#0496FF\",\n    strokeWidth: 1.4\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDashboardProfile);\nexport default __webpack_public_path__ + \"static/media/dashboard-profile.8bae062ff268dca430b08ba530c5e5bc.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\nimport {\r\n  AreaChart,\r\n  Area,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n} from 'recharts';\r\n\r\nconst data = [\r\n  {\r\n    name: 'Page A',\r\n    uv: 4000,\r\n    pv: 2400,\r\n    amt: 2400,\r\n  },\r\n  {\r\n    name: 'Page B',\r\n    uv: 3000,\r\n    pv: 1398,\r\n    amt: 2210,\r\n  },\r\n  {\r\n    name: 'Page C',\r\n    uv: 2000,\r\n    pv: 9800,\r\n    amt: 2290,\r\n  },\r\n  {\r\n    name: 'Page D',\r\n    uv: 2780,\r\n    pv: 3908,\r\n    amt: 2000,\r\n  },\r\n  {\r\n    name: 'Page E',\r\n    uv: 1890,\r\n    pv: 4800,\r\n    amt: 2181,\r\n  },\r\n  {\r\n    name: 'Page F',\r\n    uv: 2390,\r\n    pv: 3800,\r\n    amt: 2500,\r\n  },\r\n  {\r\n    name: 'Page G',\r\n    uv: 3490,\r\n    pv: 4300,\r\n    amt: 2100,\r\n  },\r\n];\r\n\r\nexport default function AsAreaChart() {\r\n  return (\r\n    <AreaChart\r\n      width={500}\r\n      height={230}\r\n      data={data}\r\n      margin={{\r\n        top: 10,\r\n        right: 30,\r\n        left: 0,\r\n        bottom: 0,\r\n      }}\r\n    >\r\n      <CartesianGrid strokeDasharray=\"3 3\" />\r\n      <XAxis dataKey=\"name\" />\r\n      <YAxis />\r\n      <Tooltip />\r\n      <Area type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" fill=\"#2993FF\" />\r\n    </AreaChart>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 243px;\r\n  height: 100%;\r\n  background: linear-gradient(206.28deg, #0496ff 6.04%, #3067d6 90.35%);\r\n  border-radius: 7px;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n","import { FC } from \"react\";\r\nimport SemiCircleProgressBar from 'react-progressbar-semicircle';\r\nimport {Wrapper} from './styles-semicircle-progress'\r\n\r\nconst SemiCircleProgress = () =>{\r\n    return (\r\n      <Wrapper>\r\n        <SemiCircleProgressBar percentage={33} showPercentValue />\r\n      </Wrapper>\r\n    );\r\n}\r\n\r\nexport default SemiCircleProgress","import { FC, useState } from 'react';\r\nimport { DashboardProps } from './types-dashboard';\r\nimport {\r\n  AreaCard,\r\n  ButtonGroup,\r\n  Card,\r\n  Cards,\r\n  ChartsCard,\r\n  Icon,\r\n  LeftCard,\r\n  RightCard,\r\n  Title,\r\n  TopCard,\r\n  Wrapper,\r\n} from './styles-dashboard';\r\nimport Chart from './chart/chart'; \r\nimport {\r\n  GeneralContainer,\r\n  LightButton,\r\n  LightSelect,\r\n  Calendar,\r\n} from '@components/common';\r\n\r\nimport profile from '@assets/images/dashboard/dashboard-profile.svg';\r\nimport { HorizontalSeparator } from '@components/common/separators/sepatators';\r\nimport AsAreaChart from './area-chart/area-chart';\r\nimport SemiCircleProgress from './semicircle-progress/semicircle-progress';\r\n\r\nconst Dashboard: FC<DashboardProps> = () => {\r\n  const [value, setValue] = useState<any[]>([\r\n    {\r\n      label: 'Yangi',\r\n      count: 12,\r\n    },\r\n    {\r\n      label: 'Bajarilmoqda',\r\n      count: 16,\r\n    },\r\n    {\r\n      label: 'Bajarilgan',\r\n      count: 14,\r\n    },\r\n    {\r\n      label: 'Qoldirilgan',\r\n      count: 10,\r\n    },\r\n  ]);\r\n\r\n  const infoMock = [\r\n    {\r\n      icon: profile,\r\n      label: 'Maqsadlar',\r\n      count: 150,\r\n    },\r\n    {\r\n      icon: profile,\r\n      label: 'Proyektlar',\r\n      count: 100,\r\n    },\r\n    {\r\n      icon: profile,\r\n      label: 'Vazifalar',\r\n      count: 200,\r\n    },\r\n    {\r\n      icon: profile,\r\n      label: 'Majlis',\r\n      count: 150,\r\n    },\r\n    {\r\n      icon: profile,\r\n      label: 'Uchrashuv',\r\n      count: 50,\r\n    },\r\n    {\r\n      icon: profile,\r\n      label: 'Tezkor reja',\r\n      count: 60,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <GeneralContainer>\r\n      <Wrapper>\r\n        <TopCard>\r\n          <RightCard>\r\n            <Title>Dashboard</Title>\r\n            <ButtonGroup>\r\n              <LightButton icon={<Icon src={profile} />} text=\"Shaxsiy\" />\r\n              <HorizontalSeparator width=\"30px\" />\r\n              <LightSelect />\r\n            </ButtonGroup>\r\n            <Cards>\r\n              {infoMock.map((item, index) => (\r\n                <Card key={index}>\r\n                  <div>\r\n                    <img src={item.icon} alt=\"icon\" />\r\n                    <p>{item.label}</p>\r\n                  </div>\r\n                  <div>\r\n                    <h1>{item.count}</h1>\r\n                  </div>\r\n                </Card>\r\n              ))}\r\n            </Cards>\r\n          </RightCard>\r\n          <LeftCard>\r\n            <Calendar />\r\n          </LeftCard>\r\n        </TopCard>\r\n        <ChartsCard>\r\n          <SemiCircleProgress />\r\n          <Chart value={value} />\r\n          <Chart value={value} />\r\n          <Chart value={value} />\r\n          <Chart value={value} />\r\n          <Chart value={value} />\r\n          <Chart value={value} />\r\n          <AreaCard>\r\n            <AsAreaChart />\r\n          </AreaCard>\r\n        </ChartsCard>\r\n        <div></div>\r\n      </Wrapper>\r\n    </GeneralContainer>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import { FC } from 'react';\r\nimport Dashboard from '@components/Layouts/dashboard/dashboard';\r\n\r\nconst DashboardPage: FC<{}> = () => {\r\n  return <Dashboard />;\r\n};\r\n\r\nexport default DashboardPage;\r\n"],"names":["Wrapper","styled","Title","ChartsCard","TopCard","RightCard","LeftCard","ButtonGroup","Cards","Card","Icon","AreaCard","Box","background","ChartJS","ArcElement","Tooltip","Legend","value","data","datasets","label","temp","map","item","push","count","getData","backgroundColor","colors","index","length","getColors","height","name","uv","pv","amt","AsAreaChart","AreaChart","width","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Area","type","stroke","fill","percentage","showPercentValue","useState","infoMock","icon","profile","src","text","alt"],"sourceRoot":""}